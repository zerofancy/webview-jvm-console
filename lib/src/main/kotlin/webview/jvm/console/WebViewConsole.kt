/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package webview.jvm.console

import java.io.File

internal data class ExecutableFile(val dir: String, val name: String)

object WebViewConsole {

    fun launchAndWait(title: String, url: String) {
        val os = System.getProperty("os.name").lowercase()
        val arch = System.getProperty("os.arch").lowercase()

        val executableFile = matchExecutable(os, arch)
        if (executableFile == null) {
            System.err.println("No executable matched.")
            return
        }
        val tmpFile = File.createTempFile("zero", ".exe")
        javaClass.getResourceAsStream("/${executableFile.dir}/${executableFile.name}")?.use { ins ->
            tmpFile.outputStream().use {  ous ->
                ins.transferTo(ous)
            }
        } ?: run {
            System.err.println("No resource found!")
            return
        }
        tmpFile.setExecutable(true)
        Runtime.getRuntime().exec(arrayOf(tmpFile.canonicalPath)).apply {
            outputStream.use {
                it.writer().use {
                    it.write(title)
                    it.write("\n")
                    it.write(url)
                    it.write("\n")
                    it.flush()
                }
            }
            waitFor()
        }
    }

    private fun matchExecutable(os: String, arch: String): ExecutableFile? {
        if (os == "linux" && arch == "amd64") {
            return ExecutableFile("linux-amd64", "console-webview-linux")
        }

        return null
    }
}
